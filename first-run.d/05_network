#!/bin/bash

# Configure networking for all wired and wireless devices.
#
# Creates network-manager connections.

function get-interfaces {
    # XXX: Sorting of interfaces is non-numeric
    WIRED_IFACES=$(nmcli --terse --fields type,device device | grep "^ethernet:" | cut -d: -f2 | sort)
    NO_OF_WIRED_IFACES=$(echo $WIRED_IFACES | wc -w)

    WIRELESS_IFACES=$(nmcli --terse --fields type,device device | grep "^wifi:" | cut -d: -f2 | sort)
}

function configure-regular-interface {
    interface="$1"
    zone="$2"
    connection_name="FreedomBox WAN"

    # Create n-m connection for a regular interface
    nmcli con add con-name "$connection_name" ifname "$interface" type ethernet
    nmcli con modify "$connection_name" connection.autoconnect TRUE
    nmcli con modify "$connection_name" connection.zone "$zone"

    echo "Configured interface '$interface' for '$zone' use as '$connection_name'."
}

function configure-shared-interface {
    interface="$1"
    connection_name="FreedomBox LAN $interface"

    # Create n-m connection for eth1
    nmcli con add con-name "$connection_name" ifname "$interface" type ethernet
    nmcli con modify "$connection_name" connection.autoconnect TRUE
    nmcli con modify "$connection_name" connection.zone internal

    # Configure this interface to be shared with other computers.
    #  - Self-assign an address and network
    #  - Start and manage DNS server (dnsmasq)
    #  - Start and manage DHCP server (dnsmasq)
    #  - Register address with mDNS
    #  - Add firewall rules for NATing from this interface
    nmcli con modify "$connection_name" ipv4.method shared

    echo "Configured interface '$interface' for shared use as '$connection_name'."
}

function configure-wireless-interface {
    interface="$1"
    connection_name="FreedomBox $interface"
    ssid="FreedomBox$interface"
    secret="freedombox123"

    configure-shared-interface "$interface"
    nmcli con add con-name "$connection_name" ifname "$interface" type wifi ssid "$ssid"
    nmcli con modify "$connection_name" connection.autoconnect TRUE
    nmcli con modify "$connection_name" connection.zone internal
    nmcli con modify "$connection_name" wifi.mode ap
    nmcli con modify "$connection_name" wifi-sec.key-mgmt wpa-psk
    nmcli con modify "$connection_name" wifi-sec.psk "$secret"

    echo "Configured interface '$interface' for shared use as '$connection_name'."
}

function multi-wired-setup {
    first_interface="$1"
    shift
    remaining_interfaces="$@"

    configure-regular-interface "$first_interface" external

    for interface in $remaining_interfaces
    do
        configure-shared-interface "$interface"
    done
}

function one-wired-setup {
    interface="$1"
    configure-regular-interface "$interface" internal
}

function wireless-setup {
    interface="$@"

    for interface in $interfaces
    do
        configure-wireless-interface "$interface"
    done
}

echo "Setting up network configuration..."
get-interfaces

case $NO_OF_WIRED_IFACES in
    "0")
        echo "No wired interfaces detected."
        ;;
    "1")
        one-wired-setup $WIRED_IFACES
        ;;
    *)
        multi-wired-setup $WIRED_IFACES
esac

wireless-setup $WIRELESS_IFACES

echo "Done setting up network configuration."

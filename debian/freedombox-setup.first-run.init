#!/bin/bash
#
# Script to complete the post-install process on first FBX boot.

### BEGIN INIT INFO
# Provides:          first-run
# Default-Start:     2 3 4 5
# Default-Stop:
# Required-Start:    $network $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Short-Description: Finish FBX install on DreamPlug
### END INIT INFO

RUNONCE=/var/freedombox/first-run

if [ -e $RUNONCE ]
then
    exit
fi

. /lib/lsb/init-functions

function tweak-kernel {
    # Update the kernel if package flash-kernel is install unless
    # requested otherwise.
    if ! type flash-kernel > /dev/null 2>&1 ; then
	return
    fi

    if [ -e /var/freedombox/dont-tweak-kernel ]
    then
	log_warning_msg "Skipped Flashing Kernel."
        return
    else
        kernel_version="$(/bin/ls $mountpoint/boot/vmlinuz-*-kirkwood | sort -rn | head -n1 | sed s#$mountpoint/boot/vmlinuz-##)"

	log_action_begin_msg "Flashing Kernel version $kernel_version "

        if mount -t proc proc /proc &&
            flash-kernel $kernel_version &&
            umount /proc ; then
	    log_action_end_msg 0
	else
	    log_action_end_msg 1
	fi
    fi
}

function wifi-ap-setup {
    # configure wireless access point with spinifex's prebuilt firmware

    echo "Configuring WIFI..."

    echo "  Sleeping 30s for DHCP"
    sleep 30    # wait for dhcp

    echo "  Installing UAP Firmware."
    wget -O /tmp/marvell_wifi_firmware.tar.gz http://www.spinifex.com.au/plugs/downloads/dreamplug/marvell_wifi_firmware.tar.gz
    tar -C /tmp -zxf /tmp/marvell_wifi_firmware.tar.gz
    mkdir -p /lib/firmware/mrvl
    cp /tmp/lib/firmware/mrvl/* /lib/firmware/mrvl

    echo "Done Configuring WIFI."
}

function create-keys {
    log_action_begin_msg "Creating SSH keys"
    rm /etc/ssh/ssh_host_*
    if dpkg-reconfigure openssh-server ; then
	log_action_end_msg 0
    else
	log_action_end_msg 1
    fi

    # see http://lists.gnupg.org/pipermail/gnupg-users/2003-March/017376.html
    #log_action_begin_msg "Creating GPG key"
    #echo "  Need to create other keys."
    #if gpg --batch --gen-key ; then
    #    log_action_end_msg 0
    # else
    #    log_action_end_msg 1
    # fi
}

function mark-complete {
    # Prevent this initial configuration script from running again.

    log_action_begin_msg "Marking Complete"
    mkdir -p "${RUNONCE%/*}"
    touch $RUNONCE
    log_action_end_msg 0
}

function remove-self {
    # remove this file.

    echo "Removing Self..."
    rm -f /etc/init.d/first-run
    rm -f /etc/rc1.d/S01first-run
    rm -f /etc/rc2.d/S01first-run
    rm /etc/init.d/first-run
    rm /etc/rc1.d/S01first-run
    rm /etc/rc2.d/S01first-run
    echo "Done Removing Self."
}

case "$1" in
    start)
        create-keys
        # wifi-ap-setup

        # the last things we do before quitting.
        tweak-kernel
        mark-complete

        # we're done, reboot.
        reboot
        ;;
    stop|restart|force-reload)
	# Do nothing
	;;
    *)
        log_success_msg "Usage: /etc/init.d/first-run {start}"
        exit 1
        ;;
esac
